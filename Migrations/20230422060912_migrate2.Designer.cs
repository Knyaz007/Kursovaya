// <auto-generated />
using System;
using Kursovaya.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kursovaya.Migrations
{
    [DbContext(typeof(TravAgenDBContext))]
    [Migration("20230422060912_migrate2")]
    partial class migrate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kursovaya.Models.Customers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Otchestvo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Kursovaya.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToursID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomersId");

                    b.HasIndex("ToursID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Kursovaya.Models.Tours", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("arrival_flight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departure_flight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("end_date_of_the_tour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tour_start_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_of_power_supply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_of_tour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Kursovaya.Models.Customers", b =>
                {
                    b.HasOne("Kursovaya.Models.Order", null)
                        .WithMany("Loggings")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Kursovaya.Models.Order", b =>
                {
                    b.HasOne("Kursovaya.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kursovaya.Models.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursID");

                    b.Navigation("Customers");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Kursovaya.Models.Order", b =>
                {
                    b.Navigation("Loggings");
                });
#pragma warning restore 612, 618
        }
    }
}
